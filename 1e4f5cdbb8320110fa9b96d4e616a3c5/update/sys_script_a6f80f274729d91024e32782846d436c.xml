<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_niem_address</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sn_niem_address">locationISEMPTY^EQ<item endquery="false" field="location" goto="false" newquery="false" operator="ISEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Location</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Pull all varibles from Address Table
	var locID = '';
	var address = current.sys_id;
	var loc = current.location.getDisplayValue();
    
	// New address fields
    var street = current.street;
    var city = current.city;
    var state = current.state.getDisplayValue();
    var zip = current.zip;
    var country = current.country.getDisplayValue();
    var adr = (street + ' ' + city + ', ' + state + ' ' + zip);
	
	var grLoc = new GlideRecord('sn_niem_location');
	var grAdr = new GlideRecord('sn_niem_address');
	
	//Query Location table for address value
	grLoc.initialize();
	grLoc.addQuery('location_name', adr);
	grLoc.query();
	
	if (grLoc.next()) { //If Location exists 
		current.location = grLoc.sys_id; //Set Address record with existing location record
	} else { //If Location is not found, create new location 
		grLoc.initialize();
		grLoc.street = street;
		grLoc.city = city;
		grLoc.state.setDisplayValue(state);
		grLoc.zip = zip;
		grLoc.country.setDisplayValue(country); 
		locID = grLoc.insert();
		current.location = locID; //Set Address record with existing location record
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>steven.ly</sys_created_by>
        <sys_created_on>2022-09-01 17:05:43</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a6f80f274729d91024e32782846d436c</sys_id>
        <sys_name>Validate Location</sys_name>
        <sys_overrides/>
        <sys_package display_value="NIEM" source="sn_niem">1e4f5cdbb8320110fa9b96d4e616a3c5</sys_package>
        <sys_policy/>
        <sys_scope display_value="NIEM">1e4f5cdbb8320110fa9b96d4e616a3c5</sys_scope>
        <sys_update_name>sys_script_a6f80f274729d91024e32782846d436c</sys_update_name>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a6f80f274729d91024e32782846d436c"/>
</record_update>
